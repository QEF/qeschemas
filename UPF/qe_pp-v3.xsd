<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="my.xsl"?>
<xs:schema targetNamespace="http://www.quantum-espresso.org/ns/qes/qe_pp-v3.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:qe_pp="http://www.quantum-espresso.org/ns/qes/qe_pp-v3.0" elementFormDefault="qualified">
  <!-- Definition of elements -->

  <xs:element name="pseudo">
    <xs:annotation>
      <xs:documentation>Root section</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="xsd_version" type="xs:string" minOccurs="1" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_info" minOccurs="1" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_header" minOccurs="1" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_mesh" minOccurs="1" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_nlcc" minOccurs="0" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_local" minOccurs="1" maxOccurs="1" />
        <!-- <xs:element ref="qe_pp:pp_semilocal" minOccurs="0"/> -->
        <xs:element ref="qe_pp:pp_nonlocal" minOccurs="1" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_pswfc" minOccurs="1" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_full_wfc" minOccurs="0" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_rhoatom" minOccurs="0" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_spin_orb" minOccurs="0" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_paw" minOccurs="0" maxOccurs="1" />
        <xs:element ref="qe_pp:pp_gipaw" minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- 
=======================
SEZIONE PP_INFO - START
======================= 
-->

  <xs:element name="pp_info" type="qe_pp:infoType">
    <xs:annotation>
      <xs:documentation>
        For human-readable data (ignored by QE).
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="infoType">
    <xs:sequence>
      <xs:element name="generated" type="xs:string" />
      <xs:element name="creator" type="qe_pp:creatorType" />
      <xs:element name="created" type="qe_pp:createdType" />
      <xs:element name="input" type="qe_pp:inputTextType" maxOccurs="unbounded" minOccurs="0" />
      <xs:element name="type" type="qe_pp:ppType" />
      <xs:element name="relativistic_effects" type="qe_pp:relType" />
      <xs:element name="element" type="qe_pp:elementType" />
      <xs:element name="suggested_basis" type="qe_pp:ppbasisType" minOccurs="0" />
      <xs:choice>
        <xs:element name="functional" type="xs:string" />
        <xs:element name="libxc_functional" type="xs:string" />
      </xs:choice>
      <xs:element name="valence_orbital" minOccurs="0" maxOccurs="unbounded" type="qe_pp:orbitalInfoType" />

    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="creatorType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="NAME" type="xs:string" />
        <xs:attribute name="VERSION" type="xs:string" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="createdType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="DATE" type="xs:string" />
        <xs:attribute name="TIME" type="xs:string" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="inputTextType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="program" type="xs:string" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ppbasisType">
    <xs:attribute name="ecutwfc" type="xs:double" />
    <xs:attribute name="ecutrho" type="xs:double" use="optional" />
  </xs:complexType>
  <!-- PSEUDOPOTENTIAL TYPE -->
  <xs:simpleType name="ppType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NC" />
      <xs:enumeration value="US" />
      <xs:enumeration value="PAW" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="relType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="full" />
      <xs:enumeration value="scalar" />
      <xs:enumeration value="none" />
    </xs:restriction>
  </xs:simpleType> <!-- PERIODIC TABLES ELEMENTS ELEMENT TYPE -->
  <xs:simpleType name="elementType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="H" />
      <xs:enumeration value="He" />
      <xs:enumeration value="Li" />
      <xs:enumeration value="Be" />
      <xs:enumeration value="B" />
      <xs:enumeration value="C" />
      <xs:enumeration value="N" />
      <xs:enumeration value="O" />
      <xs:enumeration value="F" />
      <xs:enumeration value="Ne" />
      <xs:enumeration value="Na" />
      <xs:enumeration value="Mg" />
      <xs:enumeration value="Al" />
      <xs:enumeration value="Si" />
      <xs:enumeration value="P" />
      <xs:enumeration value="S" />
      <xs:enumeration value="Cl" />
      <xs:enumeration value="Ar" />
      <xs:enumeration value="K" />
      <xs:enumeration value="Ca" />
      <xs:enumeration value="Sc" />
      <xs:enumeration value="Ti" />
      <xs:enumeration value="V" />
      <xs:enumeration value="Cr" />
      <xs:enumeration value="Mn" />
      <xs:enumeration value="Fe" />
      <xs:enumeration value="Co" />
      <xs:enumeration value="Ni" />
      <xs:enumeration value="Cu" />
      <xs:enumeration value="Zn" />
      <xs:enumeration value="Ga" />
      <xs:enumeration value="Ge" />
      <xs:enumeration value="As" />
      <xs:enumeration value="Se" />
      <xs:enumeration value="Br" />
      <xs:enumeration value="Kr" />
      <xs:enumeration value="Rb" />
      <xs:enumeration value="Sr" />
      <xs:enumeration value="Y" />
      <xs:enumeration value="Zr" />
      <xs:enumeration value="Nb" />
      <xs:enumeration value="Mo" />
      <xs:enumeration value="Tc" />
      <xs:enumeration value="Ru" />
      <xs:enumeration value="Rh" />
      <xs:enumeration value="Pd" />
      <xs:enumeration value="Ag" />
      <xs:enumeration value="Cd" />
      <xs:enumeration value="In" />
      <xs:enumeration value="Sn" />
      <xs:enumeration value="Sb" />
      <xs:enumeration value="Te" />
      <xs:enumeration value="I" />
      <xs:enumeration value="Xe" />
      <xs:enumeration value="Cs" />
      <xs:enumeration value="Ba" />
      <xs:enumeration value="La" />
      <xs:enumeration value="Ce" />
      <xs:enumeration value="Pr" />
      <xs:enumeration value="Nd" />
      <xs:enumeration value="Pm" />
      <xs:enumeration value="Sm" />
      <xs:enumeration value="Eu" />
      <xs:enumeration value="Gd" />
      <xs:enumeration value="Tb" />
      <xs:enumeration value="Dy" />
      <xs:enumeration value="Ho" />
      <xs:enumeration value="Er" />
      <xs:enumeration value="Tm" />
      <xs:enumeration value="Yb" />
      <xs:enumeration value="Lu" />
      <xs:enumeration value="Hf" />
      <xs:enumeration value="Ta" />
      <xs:enumeration value="W" />
      <xs:enumeration value="Re" />
      <xs:enumeration value="Os" />
      <xs:enumeration value="Ir" />
      <xs:enumeration value="Pt" />
      <xs:enumeration value="Au" />
      <xs:enumeration value="Hg" />
      <xs:enumeration value="Tl" />
      <xs:enumeration value="Pb" />
      <xs:enumeration value="Bi" />
      <xs:enumeration value="Po" />
      <xs:enumeration value="At" />
      <xs:enumeration value="Rn" />
      <xs:enumeration value="Fr" />
      <xs:enumeration value="Ra" />
      <xs:enumeration value="Ac" />
      <xs:enumeration value="Th" />
      <xs:enumeration value="Pa" />
      <xs:enumeration value="U" />
      <xs:enumeration value="Np" />
      <xs:enumeration value="Pu" />
      <xs:enumeration value="Am" />
      <xs:enumeration value="Cm" />
      <xs:enumeration value="Bk" />
      <xs:enumeration value="Cf" />
      <xs:enumeration value="Es" />
      <xs:enumeration value="Fm" />
      <xs:enumeration value="Md" />
      <xs:enumeration value="No" />
      <xs:enumeration value="Lr" />
      <xs:enumeration value="Rf" />
      <xs:enumeration value="Db" />
      <xs:enumeration value="Sg" />
      <xs:enumeration value="Bh" />
      <xs:enumeration value="Hs" />
      <xs:enumeration value="Mt" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="orbitalInfoType">
    <xs:attribute name="nl" type="xs:nonNegativeInteger" />
    <xs:attribute name="pn" type="xs:nonNegativeInteger" />
    <xs:attribute name="l" type="xs:nonNegativeInteger" />
    <xs:attribute name="occupation" type="xs:double" />
    <xs:attribute name="Rcut" type="xs:double" />
    <xs:attribute name="RcutUS" type="xs:double" use="optional" />
    <xs:attribute name="Epseu" type="xs:double" />
  </xs:complexType>
  <!-- 
=======================
SEZIONE PP_INFO - END
=======================
-->

  <!--  
=========================
SEZIONE PP_HEADER - START
=========================
-->

  <xs:element name="pp_header" type="qe_pp:headerType">
    <xs:annotation>
      <xs:documentation>
        Machine-readable minimal data on the pseudopotential.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <!-- pp_header related type define -->

  <xs:complexType name="headerType">
    <xs:sequence>
      <xs:element ref="qe_pp:comment" />
      <xs:element ref="qe_pp:type" />
      <xs:choice>
        <xs:element name="functional" type="xs:string" />
        <xs:element name="libxc_functional" type="xs:string" />
      </xs:choice>
      <xs:element ref="qe_pp:functional" />

      <xs:element ref="qe_pp:relativistic" />
      <xs:element ref="qe_pp:is_ultrasoft" />
      <xs:element ref="qe_pp:is_paw" />
      <xs:element ref="qe_pp:is_coulomb" />
      <xs:element ref="qe_pp:has_so" />
      <!-- <xs:element ref="qe_pp:has_wfc" /> -->
      <xs:element ref="qe_pp:has_gipaw" />
      <xs:element ref="qe_pp:paw_as_gipaw" />
      <xs:element ref="qe_pp:core_correction" />
      <xs:element ref="qe_pp:element" />
      <xs:element ref="qe_pp:z_valence" />
      <xs:element ref="qe_pp:total_psenergy" />
      <xs:element ref="qe_pp:wfc_cutoff" />
      <xs:element ref="qe_pp:rho_cutoff" />
      <xs:element ref="qe_pp:l_max" />
      <xs:element ref="qe_pp:l_max_rho" />
      <xs:element ref="qe_pp:l_local" />
      <xs:element ref="qe_pp:mesh_size" />
      <xs:element ref="qe_pp:number_of_wfc" />
      <xs:element ref="qe_pp:number_of_proj" />
    </xs:sequence>
  </xs:complexType>

  <xs:element name="comment" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Humen readable comment.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="type" type="qe_pp:ppType">
    <xs:annotation>
      <xs:documentation>
        Pseudopotential type (not used by the software, 
        human-readable alias)
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="functional" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Short-name for the DFT functional used.
        It can either be an alias (such as PBE, LDA) or specify in order:
        functional for exchange, functional for corellation,
        gradient correction for exchange, gradient correction for corellation.
        E.g. PBE is 'SLA PW PBX PBC'. 
        The list of short-names understood by QE is listed at the beginning
        of file Modules/functional.f90 in its source tree.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="relativistic" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Level of relativistic formalism used in atomic calculation
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="is_ultrasoft" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        True if pseudopotential is ultrasoft or PAW, 
        i.e. if it has augmentation/compensation charge
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="is_paw" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        True if pseudopotential is actually a PAW dataset
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="is_coulomb" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        True if pseudopotential is a Coulombian 1/r potential
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="has_so" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        True if spin-orbit information is present.
        In this case, the PP_SPIN_ORB section must be present.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="has_gipaw" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        True if additional information for GIPAW reconstruction is
        present. In this case, the PP_GIPAW section must be present.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="paw_as_gipaw" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        Deprecated??
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="core_correction" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        True if the pseudopotential contains pseudized core charge
        for non-linear core.
        In this case, the PP_NLCC section must be present.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="element" type="qe_pp:elementType">
    <xs:annotation>
      <xs:documentation>Element symbol</xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="z_valence" type="xs:double">
    <xs:annotation>
      <xs:documentation>
        Valence charge (atomic number - core charge) in units of
        abs(electron charge). This will usually coincide with the
        number of valence electrons.
        If the pseudopotential has been generated with a charged 
        configuration, z_valence will *not* be affected, but the sum
        of the occupations will not match this value.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="total_psenergy" type="xs:double">
    <xs:annotation>
      <xs:documentation>
        Pseudopotential energy of the configuration used 
        for the pseudopotential configuration (Ry)
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="wfc_cutoff" type="xs:double">
    <xs:annotation>
      <xs:documentation>
        Pseudopotential energy of the configuration used 
        for the pseudopotential configuration (Ry)
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="rho_cutoff" type="xs:double">
    <xs:annotation>
      <xs:documentation>
        Suggested charge density cutoff (Ry)
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="l_max" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Maximum angular momentum of a valence orbital.
        !!CHECK!! if the local channel has the maximum angular momentum, 
        and it is not empty, is it counted here or not? 
        Would it have any effect if it is wrong?
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="l_max_rho" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Maximum angular momentum of atomic charge density,
        should be 2*l_max.
        !!CHECK!! same as l_max
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="l_local" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        If local potential was generated by inversion of a norm-conserving
        wave function, then l_local is equal to the l of this channel.
        If the local potential was generated by some other means,
        e.g. smoothing the all-electron potential, then l_local &lt; 0.
        The atomic code in QE uses l_local=-1, if the smoothing was done
        with two Bessel functions (RRKJ optimized)
        and l_local=-2, of it was done with the Troullier-Martins recipe.
        Note that the local potential always has spherical symmetry.

        This attribute is actually unused in the plane-wave code
        (stored only for reconstruction purposes).
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="mesh_size" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Number of points in the radial grid, on which potential,
        wave functions and other quantities are stored.

        Note: the number of mesh points for the potential and the 
        wave functions may in principle be different. This is not
        allowed in the UPF 2.0.1 format.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="number_of_wfc" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Number of wave functions stored in the file.
        These wave functions are used by QE programs only to bootstrap
        self-consistency.

        Note: In the PAW case, these are *not* the wave functions used
        for the one-center terms. They are used ONLY to generate the
        initial charge density to bootstrap the self-consistent cycle.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="number_of_proj" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Number of Kleinman-Bylander projectors in the pseudopotential.
        In the PAW formalism, this is also the number of wavefunctions
        used in one-center terms. Many other quantities, e.g. the number
        of augmentation channels, depend on the value of number_of_proj.
        If the pseudopotential has no projectors, number_of_proj must be
        set to zero.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--  
=======================
SEZIONE PP_HEADER - END
=======================
-->

  <!--  
=======================
SEZIONE PP_MESH - START
=======================
-->

  <xs:element name="pp_mesh" type="qe_pp:meshType">
    <xs:annotation>
      <xs:documentation>
        Defines the mesh.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="meshType">
    <xs:sequence>
      <xs:element name="equation" type="xs:string" minOccurs="0" maxOccurs="1" />
      <xs:element ref="qe_pp:pp_r" />
      <xs:element ref="qe_pp:pp_rab" minOccurs="1" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute name="dx" type="xs:double">
      <xs:annotation>
        <xs:documentation>
          r(i) = exp ( xmin + (i-1) dx ) / zmesh i=1,mesh
          r_ab(i) = r(i) * dx
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="mesh" type="xs:positiveInteger">
      <xs:annotation>
        <xs:documentation>
          Deprecated. Use mesh_size in PP_HEADER instead.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xmin" type="xs:double">
      <xs:annotation>
        <xs:documentation>
          r(i) = exp ( xmin + (i-1) dx ) / zmesh i=1,mesh
          r_ab(i) = r(i) * dx
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="rmax" type="xs:double">
      <xs:annotation>
        <xs:documentation>
          Deprecated??
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="zmesh" type="xs:double">
      <xs:annotation>
        <xs:documentation>
          r(i) = exp ( xmin + (i-1) dx ) / zmesh i=1,mesh
          r_ab(i) = r(i) * dx
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="pp_r" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
        Data section containing the radial grid,
        on which quantities such as local potential,
        wave functions, projectors and augmentation charges are sampled.
        The ith value of these quantities corresponds to the ith
        element of the radial grid.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_rab" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
        Data section containing the radial volume element.
        These attributes have been used to generate the logarithmic grid on
        which the pseudopotential is constructed.
        The expression insode the atomic code of QE is:
          r(i) = exp ( xmin + (i-1) dx ) / zmesh i=1,mesh
          r_ab(i) = r(i) * dx
        For PAW, this is the only acceptable grid (required in V_H).
        Otherwise, any kind of grid is accepted, if it can be used to compute
        a Simpson numerical integral according to the formula
          \sum_i c_i f(i)*rab(i) = \int_0^\infty f_i dr
        where c_i are alternativly 2/3 and 4/3, except c_1=c_mesh=1/3.
        f_i is a generic function, such as the atomic wave function, sampled on
        the grid r(i): f_i = f(r_i). An equivalent definition of rab is
          rab(i) = dr(x) / dx | x= i
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--  
=====================
SEZIONE PP_MESH - END
===================== 
-->

  <!--  
=====================
SEZIONE PP_NLCC and PP_LOCAL - END
===================== 
-->

  <xs:element name="pp_nlcc" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
      Data section containing the pseudized core charge
      used for non-linear core correction
      sampled on the radial grid stored in PP_R.
      It is the true charge density, i.e. it will be 
      correctly integrated as
        \sum_i 4 \pi r_i^2 nlcc_i

      Ignored if core_correction is false.
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_local" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
      Data section containing the local potential sampled in the radial grid
      (Ry). The potential does not contain the effect of the net valence charge
      (-e2*z_valence/r_i), which will be added directly in the plane-wave code.

      Igonred if is_coulomb (PP_HEADER).
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--  
=====================
SEZIONE PP_NLCC and PP_LOCAL - END
===================== 
-->

  <!--  
     ===========================
     SEZIONE PP_NONLOCAL - START
     ===========================
-->

  <xs:element name="pp_nonlocal" type="qe_pp:nonlocalType">
    <xs:annotation>
      <xs:documentation>
      Content of this section depends on several settings in PP_HEADER.
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="nonlocalType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="qe_pp:pp_beta" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="qe_pp:pp_dij" />
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="qe_pp:pp_augmentation" />
    </xs:sequence>
  </xs:complexType>

  <xs:element name="pp_beta" type="qe_pp:ppbetaType">
    <xs:annotation>
      <xs:documentation>
        Contains a Kleinman-Bylander projector sampled on the radial grid.

        If number_of_proj > 0, there must be a PP_BETA.n section for each
        n between 1 and number_of_proj.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_dij" type="qe_pp:matrixType">
    <xs:annotation>
      <xs:documentation>
        Hamiltonian pseudo coefficients as defined in the Vanderbilt paper
        (PRB 1990).
        If the pseudopotential is a PAW data set, they must contain the
        kinetic energy difference as well.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_augmentation" type="qe_pp:ppAugmentationType">
    <xs:annotation>
      <xs:documentation>
        Compulsory for pseudopotentials with augmentation charge,
        i.e. when the pseudopotential is_ultrasoft
        (presently ultrasoft or PAW).
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="ppbetaType">
    <xs:simpleContent>
      <xs:extension base="qe_pp:vectorType">
        <xs:attribute name="size" type="xs:positiveInteger">
          <xs:annotation>
            <xs:documentation>
              UNDOCUMENTED
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="beta_index" type="xs:positiveInteger">
          <xs:annotation>
            <xs:documentation>
              UNDOCUMENTED
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="label" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>
              UNDOCUMENTED
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="pseudo_energy" type="xs:double">
          <xs:annotation>
            <xs:documentation>
              UNDOCUMENTED
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="cut_off_radius_index" type="xs:integer">
          <xs:annotation>
            <xs:documentation>
              The projector is assumed to be zero beyond this point.
              If it is not specified, it is assumed to be equal to the mesh size.
              
              NOTE: Not specifying cutoff_radius can introduce a considerable
              numerical noise in some integrals, especially in the PAW case.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="cut_off_radius" type="xs:double">
          <xs:annotation>
            <xs:documentation>
              The value of the radial mesh point corresponding to cutoff_radius_index.
              This value is currently unused in the plane-wave code.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ultrasoft_cutoff_radius" type="xs:double" use="optional">
          <xs:annotation>
            <xs:documentation>
              UNDOCUMENTED
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="norm_conserving_radius" type="xs:double" use="optional">
          <xs:annotation>
            <xs:documentation>
              Value of norm conserving wave function used to generate the 
              ultrasoft pseudopotential. 
              Ununsed in the code, stored only for reconstruction purposes,
              meaningless for PAW.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="ppAugmentationType">
    <xs:sequence>
      <xs:element ref="qe_pp:nqf" minOccurs="0" maxOccurs="1" />
      <xs:element ref="qe_pp:q_with_l" minOccurs="1" />
      <xs:element ref="qe_pp:nqlc" minOccurs="0" />
      <xs:element ref="qe_pp:shape" minOccurs="0" />
      <xs:element ref="qe_pp:cutoff_r" minOccurs="0" />
      <xs:element ref="qe_pp:cutoff_r_index" minOccurs="0" />
      <xs:element ref="qe_pp:l_max_aug" minOccurs="0" />
      <xs:element ref="qe_pp:augmentation_epsilon" minOccurs="0" />
      <xs:element ref="qe_pp:pp_q" minOccurs="0" />
      <xs:element ref="qe_pp:pp_multipoles" minOccurs="0" maxOccurs="1" />
      <xs:element ref="qe_pp:qij" minOccurs="0" maxOccurs="1" />
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="qe_pp:pp_qij" />
        <xs:element ref="qe_pp:pp_qji" />
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="nqf" type="xs:positiveInteger">
    <xs:annotation>
      <xs:documentation>
        Specifies the number of coefficients used to analytically expand
        the augmentation charge at small radius,
        according to Vanderbilt's recipe.

        Note: The analytical expansion of augmentation charge is 
        currently not implemented for PAW.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="q_with_l" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        If true, the augmentation charge can depend on the value
        of the angular momentum. I.e. if a certain channel has more
        than one angular momentum component, there shall be a different
        radial form of the augmentation for each component.

       This attribute is false for Vanderbilt's original recipe.
       It is true for PAW.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="nqlc" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Specifies the number of angular momentum components that can be
        present in the charge density, when the maximum angular momentum
        for wave functions is l_max (default: nqlc = 2*l_max+1).

        If nqf &gt; 0, nqlc is the dimension of several arrays.
        If nqf = 0, nqlc is not used.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="shape" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Describes the kind of pseudization used for the augmentation
        function. Currently unused, stored only for reconstructio purpose.

        Note: If the analytical overlap for PAW augmentation charge
        (as defined by Bloechl) will ever be implemented, this field
        will become necessary.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="cutoff_r" type="xs:double">
    <xs:annotation>
      <xs:documentation>
        Deprecated?
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="cutoff_r_index" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Deprecated?
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="l_max_aug" type="xs:integer">
    <xs:annotation>
      <xs:documentation>
        Deprecated?
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="augmentation_epsilon" type="xs:double">
    <xs:annotation>
      <xs:documentation>
        If augmentation_epsilon &gt; 0, augmentation functions,
        whose norm is less than augmentation_epsilon will be 
        considered zero.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_q" type="qe_pp:qType">
    <xs:annotation>
      <xs:documentation>
        The norm of the augmentation functions.

        Note: The fact that Q is zero for a certain augmentation function
        does not guarantee that the function will be identically zero.
        This was erroneously assumed in UPF 2.0.0, causing small errors
        in specific cases.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_multipoles" type="qe_pp:qType">
    <xs:annotation>
      <xs:documentation>
        The electrostatic multipoles of the corresponding augmentation channel.
        If the absolute value of a multipole is less than augmentation_epsilon,
        the corresponding function will be considered zero.

        Note: This section is compulsory for PAW and ignored otherwise.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="qij" type="qe_pp:qType">
    <xs:annotation>
      <xs:documentation>
        UNDOCUMENTED
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_qij" type="qe_pp:qType">
    <xs:annotation>
      <xs:documentation>
        UNDOCUMENTED
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_qji" type="qe_pp:qType">
    <xs:annotation>
      <xs:documentation>
        UNDOCUMENTED
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="qType">
    <xs:simpleContent>
      <xs:extension base="qe_pp:vectorType">
        <xs:attribute type="xs:integer" name="size" />
        <xs:attribute type="xs:double" name="q_int" use="optional" />
        <xs:attribute type="xs:integer" name="index" use="optional" />
        <xs:attribute type="xs:integer" name="first_index" use="optional" />
        <xs:attribute type="xs:integer" name="second_index" use="optional" />
        <xs:attribute type="xs:integer" name="composite_index" use="optional" />
        <xs:attribute type="xs:integer" name="angular_momentum" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>


  <!--  
=========================
SEZIONE PP_NONLOCAL - END
=========================
-->

  <!--  
========================
SEZIONE PP_PSWFC - START
========================
-->
  <xs:element name="pp_pswfc" type="qe_pp:pswfcType">
    <xs:annotation>
      <xs:documentation>
        Contains number_of_wfc data sections of the radial sample of an atomic
        wave function. These wave functions are used to set up the initial
        wave functions for the self-consistent calculation.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="pswfcType" mixed="true">
    <xs:sequence>
      <xs:element ref="qe_pp:pp_chi" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:element name="pp_chi" type="qe_pp:chiType">
    <xs:annotation>
      <xs:documentation>
        An atomic wave function sampled on the radial grid.
        They are use in QE as initial conditions for the self-consistent
        calculation.

        Note: There is no link between these wave functions and the beta
        projectors in PP_NONLOCAL. number_of_wfc can be different from
        number_of_proj. 
        This quantity is stored multiplied by a factor r.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="chiType">
    <xs:simpleContent>
      <xs:extension base="qe_pp:vectorType">
        <xs:attribute name="type" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>
              UNCOMMENT.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="size" type="xs:short">
          <xs:annotation>
            <xs:documentation>
              UNCOMMENT.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="index" type="xs:positiveInteger">
          <xs:annotation>
            <xs:documentation>
              The index n in pp_chi.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="label" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              A conventional label, such as '2S', '3P', etc.

              TODO: more restrict, and what is for unbound state?
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="l" type="xs:positiveInteger">
          <xs:annotation>
            <xs:documentation>
              Angular momentum of the wave function.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <!-- used for reference wave functions in pp_fullwfc element-->
        <xs:attribute name="occupation" type="xs:double" use="optional">
          <xs:annotation>
            <xs:documentation>
              Occupation of the wave function in the reference configuration.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="n" type="xs:positiveInteger" use="optional">
          <xs:annotation>
            <xs:documentation>
              Pseudo-principal quantum number. 
              Usually set to l-1. Only stored for reconstruction purposes.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="pseudo_energy" type="xs:double" use="optional">
          <xs:annotation>
            <xs:documentation>
              Single-particle energy of the wave function in atomic 
              configuration.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="cutoff_radius" type="xs:double" use="optional">
          <xs:annotation>
            <xs:documentation>
              Inner norm-conserving radius used by atomic code in QE.
              Only stored for reconstruction purposes.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ultrasoft_cutoff_radius" type="xs:double" use="optional">
          <xs:annotation>
            <xs:documentation>
              Outer ultrasoft radius used by atomic code in QE.
              Only stored for reconstruction purposes.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--  
  ======================
  SEZIONE PP_PSWFC - END
  ======================
-->

  <!--
========================
SECTION PP_AEWFC - BEGIN
========================
-->
  <xs:element name="pp_full_wfc" type="qe_pp:full_wfctype">
    <xs:annotation>
      <xs:documentation>
        UNCOMMENT. 
      
        AE WFE, only needed in PAW?
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="full_wfctype">
    <xs:sequence>
      <xs:element ref="qe_pp:pp_aewfc" minOccurs="1" maxOccurs="unbounded" />
      <xs:element ref="qe_pp:pp_aewfc_rel" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="pp_pswfc" type="qe_pp:chiType" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:element name="pp_aewfc" type="qe_pp:chiType">
    <xs:annotation>
      <xs:documentation>
        Contains one all-electron orbital for each projector.

        The index n ranges from 1 to number_of_proj.

        Note: The orbitals are stored multiplied by a factor of r.
        I.e. their square module already contain the factor r^2 of
        the spherical volume element.

        Dimension: mesh_size
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_aewfc_rel" type="qe_pp:chiType">
    <xs:annotation>
      <xs:documentation>
        Contains data necessary to perform a spin-orbit self-consistent
        calculation.

        For each wave function stored in the PP_PSWFC section,
        there must be one empty section of this kind.
        The index n runs from 1 to number_of_wfc.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--
=============================
  SECTION PP_AEWFC - END
=============================
-->

  <!--
=============================
  SECTION PP_RHOATOM - START
=============================
-->

  <xs:element name="pp_rhoatom" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
      The valence charge density in the reference atomic configuration.
      Can be used to genreate the initial charge density in the
      self-consistent calculation.

      This quantity is stored multiplied by a factor of r^2.
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--
=============================
  SECTION PP_RHOATOM - END
=============================
-->

  <!--
=============================
  SECTION PP_SPIN_ORB - START
=============================
-->

  <xs:element name="pp_spin_orb" type="qe_pp:spinorbType">
    <xs:annotation>
      <xs:documentation>
      Contains additional information required to perform 
      self consistent calculations with spin-orbit coupling.

      The section must be present if 'has_so' in section
      PP_HEADER is true.  Otherwise it is ignored.
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="spinorbType">
    <xs:sequence>
      <xs:element name="pp_relwfc" type="qe_pp:relwfcType" minOccurs="1" maxOccurs="unbounded" />
      <xs:element name="pp_relbeta" type="qe_pp:relbetaType" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="relwfcType">
    <xs:annotation>
      <xs:documentation>
        Contains data necessary to perform a spin-orbit self-consistent
        calculation.

        For each wave function stored in the PP_PSWFC section,
        there must be one empty section of this kind.
        The index n runs from 1 to number_of_wfc.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="index" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          The index n in PP_RELWFC
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="nn" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          The actual principal quantum number.
          Note: This can differ from the pseudo-principal quantum number
          stored in the 'nchi' attribute of PP_CHI.n
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="jchi" type="xs:double">
      <xs:annotation>
        <xs:documentation>
          Total angular momentum of the wave function,
          i.e. l+1/2, l-1/2 when l>0.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="relbetaType">
    <xs:annotation>
      <xs:documentation>
        Contains data necessary to perform a spin-orbit self-consistent
        calculation.

        For each projector in section PP_NONLOCAL,
        there must be one empty section of this kind.
        The index n runs from 1 to number_of_proj.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="index" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          The index n in PP_RELBETA.n
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="lll" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          See attribute 'angular_momentum' or corresponding PP_BETA.n
          subsection of PP_NONLOCAL (whose value is used as default).
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="jjj" type="xs:double">
      <xs:annotation>
        <xs:documentation>
          Total angular momentum of the wave function.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!--
=============================
  SECTION PP_SPIN_ORB - END
=============================
-->

  <!--
=============================
  SECTION PP_PAW - START
=============================
-->

  <xs:element name="pp_paw" type="qe_pp:pawType">
    <xs:annotation>
      <xs:documentation>
      Contains additional information required to perform 
      projector-augmented self-consistent calculation,
      i.e. an all-electron wave function for each projector,
      the all-electron local potential as well as the all-electron
      core charge for non-linear core correction.

      The section (as well as PP_MULTIPOLES and PP_NONLOCAL) must be present
      if 'is_paw' in section PP_HEADER is true.  Otherwise it is ignored.
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="pawType">
    <xs:sequence>
      <xs:element ref="qe_pp:pp_occupations" />
      <xs:element ref="qe_pp:pp_ae_nlcc" />
      <xs:element ref="qe_pp:pp_ae_vloc" />
    </xs:sequence>
    <xs:attribute name="paw_data_format" type="xs:positiveInteger">
      <xs:annotation>
        <xs:documentation>
          UNDOCUMENTED
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="core_energy" type="xs:double" use="optional">
      <xs:annotation>
        <xs:documentation>
          Constant that has to be added to the valence energy in order to
          obtain the all-electron energy.
          As it is a constant, it has no effect on the result
          of the calculation.

          Only used, if all atoms of the system are described by
          PAW data sets.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="pp_occupations" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
        Occupations used in the atomic reference configuration.
        
        Note: For higher energy projectors, this occupation will
        typically be zero. They are used as an initial condition for the
        self-consistency of the terms
          
          \rho_{ij} = \sum_b f_b \langle \beta_i | \psi_b \rangle
                                 \langle \psi_b | \beta_j \rangle

        Dimensions: number_of_proj 
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_ae_nlcc" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
        The all-electron core charge (no factors r^2 or 4\pi
        as in pp_ncll).

        Note: This section must be present even when the 
        attribute 'core_correction' of section PP_HEADER is false
        in order to correctly reproduce the all-electron energy.

        Dimension: mesh_size
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_ae_vloc" type="qe_pp:pplistType">
    <xs:annotation>
      <xs:documentation>
        The all-electron valence potential.

        Dimension: mesh_size
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <!--
=============================
  SECTION PP_PAW - END
=============================
-->


  <!--
================================
  SECTION PP_GIPAW SECTION - START
================================
-->

  <xs:element name="pp_gipaw" type="qe_pp:gipawType">
    <xs:annotation>
      <xs:documentation>
      Contains additional information required by the GIPAW code
      in order to reconstruct the all-electron charge density
      and to calculate the NMR response.

      This section must be present, if 'has_gipaw' in section PP_HEADER
      is true.

      Note: This section is independent of the PP_PAW section.
    </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="gipawType">
    <xs:sequence>
      <xs:element ref="qe_pp:number_of_core_orbitals" minOccurs="1" maxOccurs="1" />
      <xs:element ref="qe_pp:number_of_valence_orbitals" minOccurs="0" maxOccurs="1" />
      <xs:element ref="qe_pp:pp_gipaw_core_orbital" minOccurs="0" maxOccurs="unbounded" />
      <xs:element ref="qe_pp:pp_gipaw_orbital" minOccurs="0" maxOccurs="unbounded" />
      <xs:element ref="qe_pp:pp_gipaw_vlocal" />
    </xs:sequence>
    <xs:attribute name="gipaw_data_format" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          Format version string composed of a integers.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="number_of_core_orbitals" type="xs:nonNegativeInteger">
    <xs:annotation>
      <xs:documentation>
        The number of core orbitals included in the data set.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="number_of_valence_orbitals" type="xs:nonNegativeInteger">
    <xs:annotation>
      <xs:documentation>
        The number of valence orbitals included in the data set.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_gipaw_core_orbital" type="qe_pp:chiType">
    <xs:annotation>
      <xs:documentation>
        Contains all-electron orbital for particular projector.

        The index n ranges from 1 to number_of_proj.

        Note: The orbitals are stored multiplied by a factor of r.
        I.e. their square module already contain the factor r^2 of
        the spherical volume element.

        Dimension: mesh_size
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_gipaw_orbital" type="qe_pp:gipawOrbitalType">
    <xs:annotation>
      <xs:documentation>
        Contains the valence pseudo and all-electron orbitals.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="gipawOrbitalType">
    <xs:annotation>
      <xs:documentation>
        Contains all-electron orbital for particular projector.

        The index n ranges from 1 to number_of_proj.

        Note: The orbitals are stored multiplied by a factor of r.
        I.e. their square module already contain the factor r^2 of
        the spherical volume element.

        Dimension: mesh_size
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="qe_pp:pp_gipaw_wfs_ae" />
      <xs:element ref="qe_pp:pp_gipaw_wfc_ps" />
    </xs:sequence>
    <xs:attribute name="index" type="xs:positiveInteger">
      <xs:annotation>
        <xs:documentation>
          The index n in pp_gipaw_wft_ae(ps)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="label" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          A conventional label for the wave function, 
          such as '2S', '3P', etc.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="l" type="xs:integer">
      <xs:annotation>
        <xs:documentation>
          Angular momentum quantum number of the wave function.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="cutoff_radius" type="xs:double">
      <xs:annotation>
        <xs:documentation>
          Inner norm-conserving cutoff radius.
          Used as core radius by the GIPAW code.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ultrasoft_cutoff_radius" type="xs:double" use="optional">
      <xs:annotation>
        <xs:documentation>
          Outer ultra-soft cutoff radius.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="pp_gipaw_wfs_ae" type="qe_pp:chiType">
    <xs:annotation>
      <xs:documentation>
        Contains all-electron valence wavefunctions.

        Note: The orbitals are stored multiplied by a factor of r.
        I.e. their square module already contain the factor r^2 of
        the spherical volume element.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="pp_gipaw_wfc_ps" type="qe_pp:chiType">
    <xs:annotation>
      <xs:documentation>
        Contains pseudo valence orbital.

        Note: The orbitals are stored multiplied by a factor of r.
        I.e. their square module already contain the factor r^2 of
        the spherical volume element.
      </xs:documentation>
    </xs:annotation>
  </xs:element>


  <xs:element name="pp_gipaw_vlocal" type="qe_pp:gipawVlocType">
    <xs:annotation>
      <xs:documentation>
        Contains the valence pseudo and all-electron orbitals.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="gipawVlocType">
    <xs:sequence>
      <xs:element name="pp_gipaw_vlocal_ae" type="qe_pp:pplistType" />
      <xs:element name="pp_gipaw_vlocal_ps" type="qe_pp:pplistType" />
    </xs:sequence>
  </xs:complexType>

  <!--
================================
  SECTION PP_GIPAW SECTION - END
================================
-->

  <!--
============================
SEZIONE COMMON TYPES - START
============================
-->
  <xs:complexType name="pplistType">
    <xs:simpleContent>
      <xs:extension base="qe_pp:vectorType">
        <xs:attribute name="size" type="xs:positiveInteger" />
        <xs:attribute name="type" type="xs:string" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>


  <xs:complexType name="matrixType">
    <xs:simpleContent>
      <xs:extension base="qe_pp:vectorType">
        <xs:attribute name="columns" type="xs:positiveInteger" />
        <xs:attribute name="rows" type="xs:positiveInteger" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>


  <xs:simpleType name="vectorType">
    <xs:restriction>
      <xs:simpleType>
        <xs:list itemType="xs:double" />
      </xs:simpleType>
    </xs:restriction>
  </xs:simpleType>

  <!--
============================
SEZIONE COMMON TYPES - END
============================
-->

</xs:schema>